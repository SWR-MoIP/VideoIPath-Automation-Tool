name: Release Python Package

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: videoipath-automation-tool
          path: dist/

      - name: Create or update release
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            TAG="v${{ env.VERSION }}" 

            # Check if tag exists
            if git ls-remote --tags origin | grep -q "refs/tags/$TAG"; then
            echo "Deleting old tag and release for $TAG"
            gh release delete "$TAG" --yes || true
            git push --delete origin "$TAG" || true
            fi

            # Create new tag from the latest commit
            git tag "$TAG"
            git push origin "$TAG"

            # Create new release with the correct source code
            gh release create "$TAG" dist/* \
            --title "Release $TAG" \
            --notes "Automated release for version $TAG" \
            --latest
