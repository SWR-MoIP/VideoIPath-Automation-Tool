name: Build and Release Python Package

# Note: This is a temporary workflow for the repository in a private state.
# Before making the repository public, it will be replaced!

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Build package
        run: poetry build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with: 
          name: videoipath-automation-tool-${{ github.run_number }}
          path: dist/*

      - name: Extract package version
        id: get_version
        run: echo "VERSION=$(poetry version -s)" >> $GITHUB_ENV

      - name: Create or update release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_ID=$(gh release view "v${{ env.VERSION }}" --json id -q .id || echo "")

          if [ -z "$RELEASE_ID" ]; then
            echo "Creating new release v${{ env.VERSION }}"
          else
            echo "Deleting existing release v${{ env.VERSION }} and creating a new one"
            gh release delete "v${{ env.VERSION }}" --yes
          fi

          gh release create "v${{ env.VERSION }}" dist/* \
            --title "Release v${{ env.VERSION }}" \
            --notes "Automated release for version ${{ env.VERSION }}" \
            --latest
